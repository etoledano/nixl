# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cmake = import('cmake')

cpp_std = get_option('cpp_std')
cpp_ver = cpp_std.substring(3)  # Assuming cpp_std is in the format 'c++XX'

absl_cmake_opts = cmake.subproject_options()
absl_cmake_opts.add_cmake_defines({
  'CMAKE_BUILD_TYPE': get_option('buildtype'),
  'CMAKE_CXX_STANDARD': cpp_ver,
  'CMAKE_CXX_STANDARD_REQUIRED': 'ON',
  'CMAKE_POSITION_INDEPENDENT_CODE': 'ON',
  'CMAKE_POLICY_DEFAULT_CMP0156': 'NEW',
  # Meson's cmake module doesn't consider Abseil's internal cmake flags
  # on some systems so we need to manually turn them off.
  'MINGW': 'OFF',
  'ANDROID': 'OFF',
  })

absl_proj = cmake.subproject('abseil-cpp', options: absl_cmake_opts)
absl_dep = [
  absl_proj.dependency('absl_check'),
  absl_proj.dependency('absl_log'),
  absl_proj.dependency('absl_vlog_is_on'),
  absl_proj.dependency('algorithm'),
  absl_proj.dependency('algorithm_container'),
  absl_proj.dependency('any'),
  absl_proj.dependency('any_invocable'),
  absl_proj.dependency('atomic_hook'),
  absl_proj.dependency('bad_any_cast'),
  absl_proj.dependency('bad_optional_access'),
  absl_proj.dependency('bad_variant_access'),
  absl_proj.dependency('base'),
  absl_proj.dependency('base_internal'),
  absl_proj.dependency('bind_front'),
  absl_proj.dependency('bits'),
  absl_proj.dependency('bounded_utf8_length_sequence'),
  absl_proj.dependency('btree'),
  absl_proj.dependency('charset'),
  absl_proj.dependency('check'),
  absl_proj.dependency('city'),
  absl_proj.dependency('civil_time'),
  absl_proj.dependency('cleanup'),
  absl_proj.dependency('cleanup_internal'),
  absl_proj.dependency('common_policy_traits'),
  absl_proj.dependency('compare'),
  absl_proj.dependency('compressed_tuple'),
  absl_proj.dependency('config'),
  absl_proj.dependency('container_common'),
  absl_proj.dependency('container_memory'),
  absl_proj.dependency('cord'),
  absl_proj.dependency('cord_internal'),
  absl_proj.dependency('cordz_functions'),
  absl_proj.dependency('cordz_handle'),
  absl_proj.dependency('cordz_info'),
  absl_proj.dependency('cordz_sample_token'),
  absl_proj.dependency('cordz_statistics'),
  absl_proj.dependency('cordz_update_scope'),
  absl_proj.dependency('cordz_update_tracker'),
  absl_proj.dependency('core_headers'),
  absl_proj.dependency('crc32c'),
  absl_proj.dependency('crc_cord_state'),
  absl_proj.dependency('crc_cpu_detect'),
  absl_proj.dependency('crc_internal'),
  absl_proj.dependency('debugging'),
  absl_proj.dependency('debugging_internal'),
  absl_proj.dependency('decode_rust_punycode'),
  absl_proj.dependency('demangle_internal'),
  absl_proj.dependency('demangle_rust'),
  absl_proj.dependency('die_if_null'),
  absl_proj.dependency('dynamic_annotations'),
  absl_proj.dependency('endian'),
  absl_proj.dependency('errno_saver'),
  absl_proj.dependency('examine_stack'),
  absl_proj.dependency('exponential_biased'),
  absl_proj.dependency('failure_signal_handler'),
  absl_proj.dependency('fast_type_id'),
  absl_proj.dependency('fixed_array'),
  absl_proj.dependency('flags'),
  absl_proj.dependency('flags_commandlineflag'),
  absl_proj.dependency('flags_commandlineflag_internal'),
  absl_proj.dependency('flags_config'),
  absl_proj.dependency('flags_internal'),
  absl_proj.dependency('flags_marshalling'),
  absl_proj.dependency('flags_parse'),
  absl_proj.dependency('flags_path_util'),
  absl_proj.dependency('flags_private_handle_accessor'),
  absl_proj.dependency('flags_program_name'),
  absl_proj.dependency('flags_reflection'),
  absl_proj.dependency('flags_usage'),
  absl_proj.dependency('flags_usage_internal'),
  absl_proj.dependency('flat_hash_map'),
  absl_proj.dependency('flat_hash_set'),
  absl_proj.dependency('function_ref'),
  absl_proj.dependency('graphcycles_internal'),
  absl_proj.dependency('hash'),
  absl_proj.dependency('hash_container_defaults'),
  absl_proj.dependency('hash_function_defaults'),
  absl_proj.dependency('hash_policy_traits'),
  absl_proj.dependency('hashtable_control_bytes'),
  absl_proj.dependency('hashtable_debug'),
  absl_proj.dependency('hashtable_debug_hooks'),
  absl_proj.dependency('hashtablez_sampler'),
  absl_proj.dependency('has_ostream_operator'),
  absl_proj.dependency('inlined_vector'),
  absl_proj.dependency('inlined_vector_internal'),
  absl_proj.dependency('int128'),
  absl_proj.dependency('iterator_traits_internal'),
  absl_proj.dependency('iterator_traits_test_helper_internal'),
  absl_proj.dependency('kernel_timeout_internal'),
  absl_proj.dependency('layout'),
  absl_proj.dependency('leak_check'),
  absl_proj.dependency('log'),
  absl_proj.dependency('log_entry'),
  absl_proj.dependency('log_flags'),
  absl_proj.dependency('log_globals'),
  absl_proj.dependency('log_initialize'),
  absl_proj.dependency('log_internal_append_truncated'),
  absl_proj.dependency('log_internal_check_impl'),
  absl_proj.dependency('log_internal_check_op'),
  absl_proj.dependency('log_internal_conditions'),
  absl_proj.dependency('log_internal_config'),
  absl_proj.dependency('log_internal_flags'),
  absl_proj.dependency('log_internal_fnmatch'),
  absl_proj.dependency('log_internal_format'),
  absl_proj.dependency('log_internal_globals'),
  absl_proj.dependency('log_internal_log_impl'),
  absl_proj.dependency('log_internal_log_sink_set'),
  absl_proj.dependency('log_internal_message'),
  absl_proj.dependency('log_internal_nullguard'),
  absl_proj.dependency('log_internal_nullstream'),
  absl_proj.dependency('log_internal_proto'),
  absl_proj.dependency('log_internal_strip'),
  absl_proj.dependency('log_internal_structured'),
  absl_proj.dependency('log_internal_structured_proto'),
  absl_proj.dependency('log_internal_voidify'),
  absl_proj.dependency('log_severity'),
  absl_proj.dependency('log_sink'),
  absl_proj.dependency('log_sink_registry'),
  absl_proj.dependency('log_streamer'),
  absl_proj.dependency('log_structured'),
  absl_proj.dependency('low_level_hash'),
  absl_proj.dependency('malloc_internal'),
  absl_proj.dependency('memory'),
  absl_proj.dependency('meta'),
  absl_proj.dependency('node_hash_map'),
  absl_proj.dependency('node_hash_set'),
  absl_proj.dependency('node_slot_policy'),
  absl_proj.dependency('no_destructor'),
  absl_proj.dependency('non_temporal_arm_intrinsics'),
  absl_proj.dependency('non_temporal_memcpy'),
  absl_proj.dependency('nullability'),
  absl_proj.dependency('numeric'),
  absl_proj.dependency('numeric_representation'),
  absl_proj.dependency('optional'),
  absl_proj.dependency('overload'),
  absl_proj.dependency('periodic_sampler'),
  absl_proj.dependency('poison'),
  absl_proj.dependency('prefetch'),
  absl_proj.dependency('pretty_function'),
  absl_proj.dependency('random_bit_gen_ref'),
  absl_proj.dependency('random_distributions'),
  absl_proj.dependency('random_internal_distribution_caller'),
  absl_proj.dependency('random_internal_distribution_test_util'),
  absl_proj.dependency('random_internal_entropy_pool'),
  absl_proj.dependency('random_internal_fastmath'),
  absl_proj.dependency('random_internal_fast_uniform_bits'),
  absl_proj.dependency('random_internal_generate_real'),
  absl_proj.dependency('random_internal_iostream_state_saver'),
  absl_proj.dependency('random_internal_mock_helpers'),
  absl_proj.dependency('random_internal_nonsecure_base'),
  absl_proj.dependency('random_internal_pcg_engine'),
  absl_proj.dependency('random_internal_platform'),
  absl_proj.dependency('random_internal_randen'),
  absl_proj.dependency('random_internal_randen_engine'),
  absl_proj.dependency('random_internal_randen_hwaes'),
  absl_proj.dependency('random_internal_randen_hwaes_impl'),
  absl_proj.dependency('random_internal_randen_slow'),
  absl_proj.dependency('random_internal_salted_seed_seq'),
  absl_proj.dependency('random_internal_seed_material'),
  absl_proj.dependency('random_internal_traits'),
  absl_proj.dependency('random_internal_uniform_helper'),
  absl_proj.dependency('random_internal_wide_multiply'),
  absl_proj.dependency('random_random'),
  absl_proj.dependency('random_seed_gen_exception'),
  absl_proj.dependency('random_seed_sequences'),
  absl_proj.dependency('raw_hash_map'),
  absl_proj.dependency('raw_hash_set'),
  absl_proj.dependency('raw_logging_internal'),
  absl_proj.dependency('sample_recorder'),
  absl_proj.dependency('scoped_set_env'),
  absl_proj.dependency('span'),
  absl_proj.dependency('spinlock_wait'),
  absl_proj.dependency('stacktrace'),
  absl_proj.dependency('status'),
  absl_proj.dependency('statusor'),
  absl_proj.dependency('strerror'),
  absl_proj.dependency('str_format'),
  absl_proj.dependency('str_format_internal'),
  absl_proj.dependency('strings'),
  absl_proj.dependency('strings_internal'),
  absl_proj.dependency('string_view'),
  absl_proj.dependency('symbolize'),
  absl_proj.dependency('synchronization'),
  absl_proj.dependency('throw_delegate'),
  absl_proj.dependency('time'),
  absl_proj.dependency('time_zone'),
  absl_proj.dependency('tracing_internal'),
  absl_proj.dependency('type_traits'),
  absl_proj.dependency('utf8_for_code_point'),
  absl_proj.dependency('utility'),
  absl_proj.dependency('variant'),
  absl_proj.dependency('vlog_config_internal'),
  absl_proj.dependency('vlog_is_on'),
]
